{"version":3,"sources":["astridGroup.js","astridNavigator.js","astridConnect.js","carousel/displayLayer.js","carousel/rebuildLayer.js","carousel/positionLayer.js","carousel/library.js","carousel/dataLayer.js","App.js","serviceWorker.js","index.js"],"names":["AstridContext","createContext","position","move","AstridGroup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","move_by","payload","setState","by","state","SETTINGS","objectSpread","children","react_default","a","createElement","Provider","value","Component","AstridNavigator","_this$props","to","Consumer","_ref","onClick","astridConnect","WrappedComponent","astridContext","assign","connect","getControlledContent","validItems","columns","isSlider","_this$props$SETTINGS","transition","mode","map","item","idx","Item","keyIndex","current","activeItem","visible","key","style","width","concat","display","transform","time","curve","whiteSpace","overflow","RebuildLayer","getRebuildLayer","head","tail","newValidItems","assertThisInitialized","slice","length","Math","abs","render","displayLayer","PositionLayer","setNewPosition","demandedPosition","demandedItem","finiteMode","infiniteMode","optionalAdjustmentForInfiniteMode","newPosition","_this$props2","revertFromToHigh","revertFromToLow","demandedPositionToHigh","demandedPositionToLow","demandedItemToHigh","demandedItemToLow","_this$props3","_this$props4","rebuildLayer","library","getUnifiedElementsArray","items","newItems","getIsSlider","elementsArray","getInfiniteElementsArray","infiniteElementsArray","ARRAY_LENGTH","MINIMUM_SLIDER_LENGTH","MINIMUM_SAFE_ARRAY_LENGTH","getMinSafeArrayLength","helper_iterator","i","push","arrayLength","minLength","moveLastIndexesToStart","SliderLeftOverflow","SliderVisibleAreaAndRightOverflow","DataLayer","getValidItems","getInfiniteFriendlyArray","positionLayer","GALLERY_PATH","FORMAT","media_gallery_paths","title","ImageComponent","mediaGalleryPath","background","loaded","boxSizing","paddingTop","backgroundImage","backgroundColor","backgroundSize","backgroundPosition","backgroundRepeat","border","TitleComponent","height","color","justifyContent","alignItems","App","_this2","cell","group_a","group_a__slider_a","index","group_a__slider_b","group_b","group_b__slider_a","_this3","imageBlockStyle","minWidth","maxWidth","margin","astridGroup_AstridGroup","dataLayer","astridNavigator_AstridNavigator","padding","bool","Boolean","window","location","hostname","match","ReactDOM","astrid_a_slider_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e362833d.chunk.js","sourcesContent":["import React, { Component, Fragment, createContext } from 'react';\r\n\r\nexport let AstridContext = createContext({\r\n    position: null,\r\n    move: () => { }\r\n})\r\n\r\nexport default class AstridGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            SETTINGS: {\r\n                ...this.props\r\n            },\r\n\r\n            by: null,\r\n            move_by: this.move_by,\r\n        }\r\n    }\r\n\r\n    move_by = (payload) => {\r\n        if (typeof payload !== 'number') {\r\n            payload = 1;\r\n        }\r\n\r\n        this.setState({\r\n            by: payload,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        return (\r\n            <AstridContext.Provider value={this.state}>\r\n                {children}\r\n            </AstridContext.Provider>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { AstridContext } from './astridGroup';\r\n\r\nexport default class AstridNavigator extends Component {\r\n    render() {\r\n        const { children, by, to } = this.props;\r\n        return (\r\n            <AstridContext.Consumer>\r\n                {({ move_by }) => (\r\n                    <button\r\n                        onClick={()=>move_by(by, to)}>\r\n                        {children}\r\n                    </button>\r\n                )}\r\n            </AstridContext.Consumer>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { AstridContext } from './astridGroup';\r\n\r\nexport default WrappedComponent => {\r\n    return (props) => (\r\n        <AstridContext.Consumer>\r\n            {(astridContext)=><WrappedComponent {...props} {...astridContext} />}\r\n        </AstridContext.Consumer>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport connect from '../astridConnect';\r\n\r\nclass AstridDisplayLayer extends Component {\r\n    \r\n\r\n    getControlledContent = () => {\r\n        let { validItems, isSlider, columns, SETTINGS: { transition, mode }, position } = this.props;\r\n        \r\n        this.validItems = validItems.map((item, idx) => {\r\n            const Item = item.Item;\r\n            const keyIndex = item.keyIndex;\r\n            const current = idx === this.props.activeItem ? true : false ;\r\n            const visible = (idx >= position && idx < position + columns) ? true : false ;\r\n            return (\r\n                <div\r\n                    key={idx}\r\n                    style={{\r\n                        width: `${100 / columns}%`,\r\n                        display: 'inline-block',\r\n                    }}>\r\n                    {/*idx === this.props.activeItem ? 'current' : null*/}\r\n                    {(typeof Item === 'function') ? <Item current={current} visible={visible} keyIndex={keyIndex} key={idx}/> : Item}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div style={{\r\n                width: '100%',\r\n                transform: `translate(${-1 * position * (100 / columns)}%, 0)`,\r\n                transition: `transform ${transition.time}ms ${transition.curve}`,\r\n                whiteSpace: 'nowrap',\r\n            }}>\r\n                {this.validItems}\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div style={{\r\n                overflow: 'hidden',\r\n            }}>\r\n                {this.getControlledContent()}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(AstridDisplayLayer)","import React, { Component } from 'react';\r\nimport DisplayLayer from './displayLayer';\r\nimport connect from '../astridConnect';\r\n\r\nclass RebuildLayer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.newValidItems = this.props.validItems;\r\n    }\r\n\r\n    getRebuildLayer = () => {\r\n        const { SETTINGS: { mode }, by } = this.props;\r\n        const { newValidItems } = this;\r\n        if (mode !== 'infinite') return;\r\n\r\n        let head;\r\n        let tail;\r\n        if (by < 0) {\r\n            tail = newValidItems.slice(newValidItems.length - Math.abs(by));\r\n            head = newValidItems.slice(0, newValidItems.length - Math.abs(by));\r\n            let validItems = tail.concat(head);\r\n            this.newValidItems = validItems;\r\n        } else {\r\n            head = newValidItems.slice(0, Math.abs(by));\r\n            tail = newValidItems.slice(Math.abs(by));\r\n            let validItems = tail.concat(head);\r\n            this.newValidItems = validItems;\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n        //this.getRebuildLayer();\r\n        \r\n        return (\r\n            <DisplayLayer\r\n                {...this.props}\r\n                //{...this.state}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(RebuildLayer)","import React, { Component } from 'react';\r\nimport RebuildLayer from './rebuildLayer';\r\nimport connect from '../astridConnect';\r\n\r\nclass PositionLayer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.position = this.props.SETTINGS.mode === 'infinite' ? this.props.columns : 0;\r\n        this.activeItem = this.props.SETTINGS.mode === 'infinite' ? this.props.columns : 0;\r\n    }\r\n\r\n    setNewPosition = () => {\r\n        const { SETTINGS: { mode }, by } = this.props;\r\n\r\n        const demandedPosition = this.position + by;\r\n        const demandedItem = this.activeItem + by;\r\n\r\n        if (mode === 'finite') {\r\n            this.finiteMode(demandedPosition, demandedItem)\r\n        };\r\n\r\n        if (mode === 'infinite') {\r\n            this.infiniteMode(demandedPosition, demandedItem);\r\n            this.optionalAdjustmentForInfiniteMode();\r\n        }\r\n\r\n        this.position = this.newPosition;\r\n    }\r\n\r\n    infiniteMode = (demandedPosition, demandedItem) => {\r\n        const { validItems, columns } = this.props;\r\n        const revertFromToHigh = demandedItem - validItems.length;\r\n        const revertFromToLow = validItems.length + demandedItem;\r\n\r\n        const demandedPositionToHigh = (demandedPosition >= validItems.length - columns);\r\n        const demandedPositionToLow = (demandedPosition < 0);\r\n\r\n        const demandedItemToHigh = (demandedItem >= validItems.length);\r\n        const demandedItemToLow = (demandedItem < 0);\r\n\r\n        this.newPosition = (demandedPositionToHigh || demandedPositionToLow) ?\r\n            demandedPositionToHigh ? (validItems.length - columns) : 0 : demandedPosition\r\n\r\n        this.activeItem = demandedItem;\r\n\r\n        if (demandedItemToHigh) {\r\n            this.activeItem = revertFromToHigh;\r\n            this.newPosition = revertFromToHigh;\r\n        } else if (demandedItemToLow) {\r\n            this.activeItem = revertFromToLow;\r\n            this.newPosition = (this.activeItem > validItems.length - columns) ? validItems.length - columns : this.activeItem;\r\n        }\r\n    }\r\n\r\n    finiteMode = (demandedPosition, demandedItem) => {\r\n        const { validItems, columns } = this.props;\r\n        const demandedPositionToHigh = (demandedPosition >= validItems.length - columns);\r\n        const demandedPositionToLow = (demandedPosition < 0);\r\n        const demandedItemToHigh = (demandedItem >= validItems.length);\r\n        const demandedItemToLow = (demandedItem < 0);\r\n\r\n        const newPosition = (demandedPositionToHigh || demandedPositionToLow) ?\r\n            demandedPositionToHigh ? (validItems.length - columns) : 0 : demandedPosition\r\n\r\n        this.activeItem = (demandedItemToHigh || demandedItemToLow) ?\r\n            demandedItemToHigh ? (validItems.length - 1) : 0 : demandedItem;\r\n\r\n        this.newPosition = newPosition !== demandedItem ? this.position : newPosition;\r\n    }\r\n\r\n    optionalAdjustmentForInfiniteMode = () => {\r\n        const { validItems, columns } = this.props;\r\n        if (this.activeItem >= 0 && this.activeItem < validItems.length - columns) {\r\n            this.newPosition = this.activeItem;\r\n        } else {\r\n            this.newPosition = validItems.length - columns;\r\n        }\r\n        \r\n    }\r\n\r\n    render = () => {\r\n        this.setNewPosition();\r\n        \r\n        return (\r\n            <RebuildLayer \r\n                {...this.props}\r\n                {...this}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(PositionLayer)","export const library = {\r\n    getUnifiedElementsArray: (items, children) => {\r\n        let newItems = null;\r\n        newItems = (items && items.length && items.length > 0 && typeof items === 'object') ? items : children;\r\n        newItems = (newItems && newItems.length && newItems.length > 0 && typeof newItems === 'object') ? newItems : null;\r\n        newItems = newItems.map((item, keyIndex)=>{\r\n            return {\r\n                Item: item, \r\n                keyIndex, \r\n            }\r\n        })\r\n        return newItems;\r\n    },\r\n\r\n    getIsSlider: (columns, elementsArray) => {\r\n        return elementsArray.length <= columns ? false : true;\r\n    },\r\n\r\n    getInfiniteElementsArray: (columns, elementsArray) => {\r\n        let infiniteElementsArray = [];\r\n        const ARRAY_LENGTH = elementsArray.length;\r\n        const MINIMUM_SLIDER_LENGTH = 3 * columns;\r\n        const MINIMUM_SAFE_ARRAY_LENGTH = library.getMinSafeArrayLength(ARRAY_LENGTH, MINIMUM_SLIDER_LENGTH);\r\n        \r\n        if (ARRAY_LENGTH < MINIMUM_SAFE_ARRAY_LENGTH) {\r\n            let helper_iterator = 0;\r\n\r\n            for (let i = 0; i < MINIMUM_SAFE_ARRAY_LENGTH; i++) {\r\n                helper_iterator = helper_iterator >= ARRAY_LENGTH ? 0 : helper_iterator;\r\n                infiniteElementsArray.push(elementsArray[helper_iterator])\r\n                helper_iterator++;\r\n            }\r\n\r\n        } else {\r\n            infiniteElementsArray = elementsArray;\r\n        }\r\n\r\n\r\n        return infiniteElementsArray;\r\n    },\r\n\r\n    getMinSafeArrayLength: (arrayLength, minLength) => {\r\n\r\n        while (arrayLength < minLength) {\r\n            arrayLength += arrayLength\r\n        }\r\n      \r\n        return arrayLength;\r\n    },\r\n\r\n    moveLastIndexesToStart: (columns, elementsArray) => {\r\n        let SliderLeftOverflow = elementsArray.slice(elementsArray.length - columns);\r\n        let SliderVisibleAreaAndRightOverflow = elementsArray.slice(0, elementsArray.length - columns);\r\n        return SliderLeftOverflow.concat(SliderVisibleAreaAndRightOverflow);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport connect from '../astridConnect';\r\nimport PositionLayer from './positionLayer';\r\nimport {\r\n    library\r\n} from './library';\r\n\r\nclass DataLayer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.validItems = [];\r\n        this.isSlider = null;\r\n        this.getValidItems();\r\n        this.getIsSlider();\r\n        this.getInfiniteFriendlyArray();\r\n    }\r\n\r\n    getValidItems = () => {\r\n        const { items, children } = this.props;\r\n        this.validItems = library.getUnifiedElementsArray(items, children);\r\n    }\r\n\r\n    getIsSlider = () => {\r\n        const { columns } = this.props;\r\n        this.isSlider = library.getIsSlider(columns, this.validItems)\r\n    }\r\n\r\n    getInfiniteFriendlyArray = () => {\r\n        const { columns, SETTINGS: { mode } } = this.props;\r\n      \r\n        if (!this.isSlider || mode === 'finite') return;\r\n        this.validItems = library.getInfiniteElementsArray(columns, this.validItems);\r\n        this.validItems = library.moveLastIndexesToStart(columns, this.validItems)\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.validItems || !this.validItems.length) {\r\n            return (\r\n                <div>\r\n                    Slider require array of data\r\n                </div>\r\n            )\r\n        };\r\n\r\n        return (\r\n            <PositionLayer\r\n                {...this.props}\r\n                {...this}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(DataLayer)","import React, { Component } from 'react';\r\nimport AstridGroup from './astridGroup';\r\nimport AstridNavigator from './astridNavigator';\r\nimport AstridSlider from './carousel';\r\nimport ExampleHook from './hooks/ExampleHook';\r\n\r\nconst GALLERY_PATH = './media-gallery/';\r\nconst FORMAT = '.jpg';\r\nconst media_gallery_paths = [\r\n  { title: 'animals' },\r\n  { title: 'books' },\r\n  { title: 'business' },\r\n  { title: 'coins' },\r\n  { title: 'frog' },\r\n  { title: 'girl' },\r\n  { title: 'literature' },\r\n  { title: 'money' },\r\n  { title: 'reading' },\r\n  { title: 'tabletop-photography' },\r\n  { title: 'water' },\r\n]\r\n\r\nclass ImageComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.loaded = false;\r\n    this.background = '';\r\n  }\r\n\r\n  mediaGalleryPath = () => {\r\n    const { keyIndex } = this.props;\r\n    const title = media_gallery_paths[keyIndex].title;\r\n    this.background = `url(${GALLERY_PATH + title + FORMAT})`;\r\n    this.loaded = true;\r\n  }\r\n\r\n  render = () => {\r\n    const { visible, current } = this.props;\r\n    if (!this.loaded && visible) {\r\n      this.mediaGalleryPath();\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          boxSizing: 'border-box',\r\n          width: '100%',\r\n          paddingTop: '100%',\r\n          backgroundImage: this.background,\r\n          backgroundColor: (visible || current) ? current ? 'rgba(255, 0, 0, 0.7)' : 'rgba(0,0,0,0.1)' : 'rgba(0,0,0,0.7)',\r\n          transition: 'background-color 500ms linear',\r\n          backgroundSize: 'contain',\r\n          backgroundPosition: 'center',\r\n          backgroundRepeat: 'no-repeat',\r\n          border: current ? 'solid 1px red' : 'solid 1px gray',\r\n        }} />\r\n    )\r\n  }\r\n}\r\n\r\nconst TitleComponent = (props) => {\r\n  let { current, visible, keyIndex } = props;\r\n  const title = media_gallery_paths[keyIndex].title;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        boxSizing: 'border-box',\r\n        width: '100%',\r\n        height: 50,\r\n        color: current ? 'white' : 'gray',\r\n        border: current ? 'solid 2px red' : 'solid 2px gray',\r\n        background: current ? 'rgba(255, 0, 0, 0.7)' : 'rgba(255, 0, 0, 0.2)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}>\r\n      {title}\r\n    </div>\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.cell = {\r\n      width: '100%',\r\n      height: 300,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      border: 'solid 1px green'\r\n    }\r\n\r\n    this.group_a = {\r\n      mode: 'infinite',//'infinite'\r\n      transition: {\r\n        time: 300,\r\n        curve: 'ease-in',\r\n        style: 'translate', //or fade,\r\n        mode: 'absolue' //relative\r\n      },\r\n    }\r\n\r\n    this.group_a__slider_a = {\r\n      items: media_gallery_paths.map((item, index) => {\r\n        return ImageComponent;\r\n      }),\r\n      columns: 2,\r\n    }\r\n\r\n    this.group_a__slider_b = {\r\n      items: media_gallery_paths.map((item, index) => {\r\n        return TitleComponent;\r\n      }),\r\n      columns: 5,\r\n    }\r\n\r\n    this.group_b = {\r\n      mode: 'finite',//'infinite'\r\n      transition: {\r\n        time: 300,\r\n        curve: 'ease-in',\r\n        style: 'translate', //or fade\r\n        mode: 'absolute'//relative\r\n      },\r\n    }\r\n\r\n    this.group_b__slider_a = {\r\n      items: [],\r\n      columns: 3,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let imageBlockStyle = {\r\n      boxSizing: 'border-box',\r\n      width: '100%',\r\n      paddingTop: '100%',\r\n      backgroundSize: 'contain',\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'no-repeat',\r\n      border: 'solid 1px gray',\r\n    }\r\n\r\n    return (\r\n      <div style={{ width: '100%', minWidth: 200, maxWidth: 1200, margin: '0 auto'}}>\r\n        <AstridGroup {...this.group_a}>\r\n          <h2>Astrid Slider - infinite, components (current marked)</h2>\r\n          <div style={{\r\n            width: '50%',\r\n            margin: '0 auto',\r\n          }}>\r\n            <AstridSlider {...this.group_a__slider_a} />\r\n          </div>\r\n          <AstridSlider {...this.group_a__slider_b} />\r\n\r\n          <div style={{ width: '10%', margin: '0 auto' }}>\r\n            <AstridNavigator by={-1}><span>left 1</span></AstridNavigator>\r\n            <AstridNavigator by={1}><span>right 1</span></AstridNavigator>\r\n            <br />\r\n            <AstridNavigator by={-4}><span>left 4</span></AstridNavigator>\r\n            <AstridNavigator by={4}><span>right 4</span></AstridNavigator>\r\n          </div>\r\n        </AstridGroup>\r\n        <br />\r\n        <button\r\n          style={{ padding: 10, margin: '0 auto', display: 'block' }}\r\n          onClick={\r\n            () => {\r\n              this.group_a__slider_a = {\r\n                ...this.group_a__slider_a,\r\n                columns: 1,\r\n              }\r\n              this.group_a__slider_b = {\r\n                ...this.group_a__slider_b,\r\n                columns: 6,\r\n              }\r\n              this.setState({\r\n                bool: !this.bool\r\n              })\r\n            }\r\n          }>\r\n          Change columns amount\r\n        </button>\r\n        <br /><br /><br /><br /><br /><br /><br /><br />\r\n        <AstridGroup {...this.group_b}>\r\n          <h2>Astrid Slider - finite, components (current marked)</h2>\r\n          <AstridSlider {...this.group_b__slider_a}>\r\n            {media_gallery_paths.map((item, index) => {\r\n              return ImageComponent;\r\n            })}\r\n          </AstridSlider>\r\n          <AstridNavigator by={-1}><span>left 1</span></AstridNavigator>\r\n          <AstridNavigator by={1}><span>right 1</span></AstridNavigator>\r\n        </AstridGroup>\r\n\r\n        <br /><br /><br /><br /><br /><br /><br /><br />\r\n        <AstridGroup {...this.group_b}>\r\n          <h2>Astrid Slider - finite, html blocks (current not marked)</h2>\r\n          <AstridSlider {...this.group_b__slider_a}>\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[0].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[1].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[2].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[3].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[4].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[5].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[6].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[7].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[8].title + FORMAT})`\r\n            }} />\r\n            <div style={{\r\n              ...imageBlockStyle,\r\n              backgroundImage: `url(${GALLERY_PATH + media_gallery_paths[9].title + FORMAT})`\r\n            }} />\r\n          </AstridSlider>\r\n          <AstridNavigator by={-1}><span>left 1</span></AstridNavigator>\r\n          <AstridNavigator by={1}><span>right 1</span></AstridNavigator>\r\n        </AstridGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}